;; Timothy Zakian tests-case for a15
;; The factorial function written in pure lambda calculus
;; calculates (fact 5).
(letrec ((fact (lambda (y)
                 (((lambda (f)
                     ((lambda (x) (f (lambda (v) ((x x) v))))
                      (lambda (x) (f (lambda (v) ((x x) v))))))
                   (lambda (f)
                     (lambda (n)
                       ((((lambda (test)
                            (lambda (true)
                              (lambda (false)
                                (((test true) false) (lambda (f) (lambda (x) x))))))
                          ((lambda (n)
                             ((n (lambda (x) (lambda (true) (lambda (false) false))))
                              (lambda (true) (lambda (false) true))))
                           n))
                         (lambda (_) (lambda (f) (lambda (x) (f x)))))
                        (lambda (_)
                          (((lambda (n)
                              (lambda (m) (lambda (f) (lambda (z) ((m (n f)) z)))))
                            n)
                           (f ((lambda (n)
                                 (lambda (f)
                                   (lambda (x)
                                     (((n (lambda (g) (lambda (h) (h (g f)))))
                                       (lambda (u) x))
                                      (lambda (u) u)))))
                               n))))))))
                  y)))
         (church->arabic (lambda (n)
                           ((n (lambda (z) (+ z 1))) 0)))
         (five (lambda (f)
                 (lambda (x)
                   (f (f (f (f (f x)))))))))
  (church->arabic (fact five)))


